input{
	file {
		path => "${LAPD_HOME}/data/lapd_small.csv"
		start_position => beginning
		# This is the default charset. See https://www.elastic.co/guide/en/logstash/current/plugins-codecs-plain.html
		codec => plain { charset => "UTF-8" }
		sincedb_path => "${LAPD_HOME}/lapd_small.sincedb"
  }
}

filter {
	# Documentation: https://www.elastic.co/guide/en/logstash/current/plugins-filters-csv.html
	csv {
		separator => ","
		columns => ["Date Rptd","DR NO","date_occurrence","time_occurrence","area_code","area_name","RD","crime_code","crime_description","Status","Status Desc","address","Cross Street","gps"]
		remove_field => ["Date Rptd","DR NO","RD","Status","Status Desc","Cross Street"]
	}

	# Documentation: https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html
#	mutate {
		# Process dato
#		add_field => { "datetime" => "<put fields date_occurrence and time_occurrence separated by a white space>" }
#		remove_field => ["<field 1>","<field 2>"]

		#Process address: replace several white spaces with one
#		strip => 
#		split => 
#		join => 
		
		#Process gps field (lat,long), remove parenthesis
		# https://www.elastic.co/guide/en/elasticsearch/reference/1.4/mapping-geo-point-type.html#_lat_lon_as_string_6
#		gsub => 

#	}
	
	# Documentation: https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html
#	date {
#		# http://joda-time.sourceforge.net/timezones.html
#		timezone => "<find timezone for LA>"
#		match => [ "datetime", "<write format of datetime field>" ] 
#		target => "<field you want to put the parsed date>"	
#		remove_field => ["<name of field to remove>"]
#	}
}

output{
	if (("_csvparsefailure" not in [tags]) and ("_dateparsefailure" not in [tags])){
		stdout { codec => rubydebug}
	} else {
		file {
			path => "${LAPD_HOME}/lapd-parse-failure.csv"
		}
	}
}